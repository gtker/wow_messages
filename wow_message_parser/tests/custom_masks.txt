use std::io::{Read, Write};

use crate::vanilla::{
    AuraMask, UpdateMask,
};

/// Auto generated from the original `wowm` in file [`wow_message_parser/tests/impl_levels.wowm:213`](https://github.com/gtker/wow_messages/tree/main/wow_message_parser/tests/impl_levels.wowm#L213):
/// ```text
/// struct CustomMasks {
///     UpdateMask update_mask;
///     AuraMask aura_mask;
/// }
/// ```
#[derive(Debug, Clone, PartialEq, Eq, Hash, PartialOrd, Ord, Default)]
pub struct CustomMasks {
    pub update_mask: UpdateMask,
    pub aura_mask: AuraMask,
}

impl CustomMasks {
    pub(crate) fn write_into_vec(&self, mut w: impl Write) -> Result<(), std::io::Error> {
        // update_mask: UpdateMask
        self.update_mask.write_into_vec(&mut w)?;

        // aura_mask: AuraMask
        self.aura_mask.write_into_vec(&mut w)?;

        Ok(())
    }
}

impl CustomMasks {
    pub(crate) fn read<R: std::io::Read>(mut r: R) -> Result<Self, std::io::Error> {
        // update_mask: UpdateMask
        let update_mask = UpdateMask::read(&mut r)?;

        // aura_mask: AuraMask
        let aura_mask = AuraMask::read(&mut r)?;

        Ok(Self {
            update_mask,
            aura_mask,
        })
    }

}

impl CustomMasks {
    pub(crate) fn size(&self) -> usize {
        self.update_mask.size() // update_mask: UpdateMask
        + self.aura_mask.size() // aura_mask: AuraMask
    }
}

