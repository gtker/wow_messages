smsg SMSG_PERIODICAURALOG = 0x024E {
    PackedGuid target;
    PackedGuid caster;
    Spell spell;
    u32 amount_of_auras;
    AuraLog[amount_of_auras] auras;
} {
    paste_versions = "1.12 2.4.3 3.3.5";
}

enum AuraType : u32 {
    NONE = 0;
    BIND_SIGHT = 1;
    MOD_POSSESS = 2;
    /// vmangos: The aura should do periodic damage, the function that handles this is Aura::HandlePeriodicDamage, the amount is usually decided by the Unit::SpellDamageBonusDone or Unit::MeleeDamageBonusDone which increases/decreases the Modifier::m_amount
    PERIODIC_DAMAGE = 3;
    /// vmangos: Used by Aura::HandleAuraDummy
    DUMMY = 4;
    /// vmangos: Used by Aura::HandleModConfuse, will either confuse or unconfuse the target depending on whether the apply flag is set
    MOD_CONFUSE = 5;
    MOD_CHARM = 6;
    MOD_FEAR = 7;
    /// vmangos: The aura will do periodic heals of a target, handled by Aura::HandlePeriodicHeal, uses Unit::SpellHealingBonusDone to calculate whether to increase or decrease Modifier::m_amount
    PERIODIC_HEAL = 8;
    /// vmangos: Changes the attackspeed, the Modifier::m_amount decides how much we change in percent, ie, if the m_amount is 50 the attackspeed will increase by 50%
    MOD_ATTACKSPEED = 9;
    /// vmangos: Modifies the threat that the Aura does in percent, the Modifier::m_miscvalue decides which of the SpellSchools it should affect threat for.  \see SpellSchoolMask
    MOD_THREAT = 10;
    /// vmangos: Just applies a taunt which will change the threat a mob has Taken care of in Aura::HandleModThreat
    MOD_TAUNT = 11;
    /// vmangos: Stuns targets in different ways, taken care of in Aura::HandleAuraModStun
    MOD_STUN = 12;
    /// vmangos: Changes the damage done by a weapon in any hand, the Modifier::m_miscvalue will tell what school the damage is from, it's used as a bitmask \see SpellSchoolMask
    MOD_DAMAGE_DONE = 13;
    /// vmangos: Not handled by the Aura class but instead this is implemented in Unit::MeleeDamageBonusTaken and Unit::SpellBaseDamageBonusTaken
    MOD_DAMAGE_TAKEN = 14;
    /// vmangos: Not handled by the Aura class, implemented in Unit::DealMeleeDamage
    DAMAGE_SHIELD = 15;
    /// vmangos: Taken care of in Aura::HandleModStealth, take note that this is not the same thing as invisibility
    MOD_STEALTH = 16;
    /// vmangos: Not handled by the Aura class, implemented in Unit::isVisibleForOrDetect which does a lot of checks to determine whether the person is visible or not, the SPELL_AURA_MOD_STEALTH seems to determine how in/visible ie a rogue is.
    MOD_STEALTH_DETECT = 17;
    /// vmangos: Handled by Aura::HandleInvisibility, the Modifier::m_miscvalue in the struct seems to decide what kind of invisibility it is with a bitflag. the miscvalue decides which bit is set, ie: 3 would make the 3rd bit be set.
    MOD_INVISIBILITY = 18;
    /// vmangos: Adds one of the kinds of detections to the possible detections.  As in SPEALL_AURA_MOD_INVISIBILITY the Modifier::m_miscvalue seems to decide what kind of invisibility the Unit should be able to detect.
    MOD_INVISIBILITY_DETECTION = 19;
    /// 20,21 unofficial
    OBS_MOD_HEALTH = 20;
    OBS_MOD_MANA = 21;
    /// vmangos: Handled by Aura::HandleAuraModResistance, changes the resistance for a unit the field Modifier::m_miscvalue decides which kind of resistance that should be changed, for possible values see SpellSchools.  \see SpellSchools
    MOD_RESISTANCE = 22;
    /// vmangos: Currently just sets Aura::m_isPeriodic to apply and has a special case for Curse of the Plaguebringer.
    PERIODIC_TRIGGER_SPELL = 23;
    /// vmangos: Just sets Aura::m_isPeriodic to apply
    PERIODIC_ENERGIZE = 24;
    /// vmangos: Changes whether the target is pacified or not depending on the apply flag.  Pacify makes the target silenced and have all it's attack skill disabled.  See: `http://classic.wowhead.com/spell=6462`
    MOD_PACIFY = 25;
    /// vmangos: Roots or unroots the target
    MOD_ROOT = 26;
    /// vmangos: Silences the target and stops and spell casts that should be stopped, they have the flag SpellPreventionType::SPELL_PREVENTION_TYPE_SILENCE
    MOD_SILENCE = 27;
    REFLECT_SPELLS = 28;
    MOD_STAT = 29;
    MOD_SKILL = 30;
    MOD_INCREASE_SPEED = 31;
    MOD_INCREASE_MOUNTED_SPEED = 32;
    MOD_DECREASE_SPEED = 33;
    MOD_INCREASE_HEALTH = 34;
    MOD_INCREASE_ENERGY = 35;
    MOD_SHAPESHIFT = 36;
    EFFECT_IMMUNITY = 37;
    STATE_IMMUNITY = 38;
    SCHOOL_IMMUNITY = 39;
    DAMAGE_IMMUNITY = 40;
    DISPEL_IMMUNITY = 41;
    PROC_TRIGGER_SPELL = 42;
    PROC_TRIGGER_DAMAGE = 43;
    TRACK_CREATURES = 44;
    TRACK_RESOURCES = 45;
    /// Ignore all Gear test spells
    UNKNOWN46 = 46;
    MOD_PARRY_PERCENT = 47;
    /// One periodic spell
    UNKNOWN48 = 48;
    MOD_DODGE_PERCENT = 49;
    MOD_BLOCK_SKILL = 50;
    MOD_BLOCK_PERCENT = 51;
    MOD_CRIT_PERCENT = 52;
    PERIODIC_LEECH = 53;
    MOD_HIT_CHANCE = 54;
    MOD_SPELL_HIT_CHANCE = 55;
    TRANSFORM = 56;
    MOD_SPELL_CRIT_CHANCE = 57;
    MOD_INCREASE_SWIM_SPEED = 58;
    MOD_DAMAGE_DONE_CREATURE = 59;
    MOD_PACIFY_SILENCE = 60;
    MOD_SCALE = 61;
    PERIODIC_HEALTH_FUNNEL = 62;
    PERIODIC_MANA_FUNNEL = 63;
    PERIODIC_MANA_LEECH = 64;
    MOD_CASTING_SPEED_NOT_STACK = 65;
    FEIGN_DEATH = 66;
    MOD_DISARM = 67;
    MOD_STALKED = 68;
    SCHOOL_ABSORB = 69;
    EXTRA_ATTACKS = 70;
    MOD_SPELL_CRIT_CHANCE_SCHOOL = 71;
    MOD_POWER_COST_SCHOOL_PCT = 72;
    MOD_POWER_COST_SCHOOL = 73;
    REFLECT_SPELLS_SCHOOL = 74;
    MOD_LANGUAGE = 75;
    FAR_SIGHT = 76;
    MECHANIC_IMMUNITY = 77;
    MOUNTED = 78;
    MOD_DAMAGE_PERCENT_DONE = 79;
    MOD_PERCENT_STAT = 80;
    SPLIT_DAMAGE_PCT = 81;
    WATER_BREATHING = 82;
    MOD_BASE_RESISTANCE = 83;
    MOD_REGEN = 84;
    MOD_POWER_REGEN = 85;
    CHANNEL_DEATH_ITEM = 86;
    MOD_DAMAGE_PERCENT_TAKEN = 87;
    MOD_HEALTH_REGEN_PERCENT = 88;
    PERIODIC_DAMAGE_PERCENT = 89;
    MOD_RESIST_CHANCE = 90;
    MOD_DETECT_RANGE = 91;
    PREVENTS_FLEEING = 92;
    MOD_UNATTACKABLE = 93;
    INTERRUPT_REGEN = 94;
    GHOST = 95;
    SPELL_MAGNET = 96;
    MANA_SHIELD = 97;
    MOD_SKILL_TALENT = 98;
    MOD_ATTACK_POWER = 99;
    AURAS_VISIBLE = 100;
    MOD_RESISTANCE_PCT = 101;
    MOD_MELEE_ATTACK_POWER_VERSUS = 102;
    MOD_TOTAL_THREAT = 103;
    WATER_WALK = 104;
    FEATHER_FALL = 105;
    HOVER = 106;
    ADD_FLAT_MODIFIER = 107;
    ADD_PCT_MODIFIER = 108;
    ADD_TARGET_TRIGGER = 109;
    MOD_POWER_REGEN_PERCENT = 110;
    ADD_CASTER_HIT_TRIGGER = 111;
    OVERRIDE_CLASS_SCRIPTS = 112;
    MOD_RANGED_DAMAGE_TAKEN = 113;
    MOD_RANGED_DAMAGE_TAKEN_PCT = 114;
    MOD_HEALING = 115;
    MOD_REGEN_DURING_COMBAT = 116;
    MOD_MECHANIC_RESISTANCE = 117;
    MOD_HEALING_PCT = 118;
    SHARE_PET_TRACKING = 119;
    UNTRACKABLE = 120;
    EMPATHY = 121;
    MOD_OFFHAND_DAMAGE_PCT = 122;
    MOD_TARGET_RESISTANCE = 123;
    MOD_RANGED_ATTACK_POWER = 124;
    MOD_MELEE_DAMAGE_TAKEN = 125;
    MOD_MELEE_DAMAGE_TAKEN_PCT = 126;
    RANGED_ATTACK_POWER_ATTACKER_BONUS = 127;
    MOD_POSSESS_PET = 128;
    MOD_SPEED_ALWAYS = 129;
    MOD_MOUNTED_SPEED_ALWAYS = 130;
    MOD_RANGED_ATTACK_POWER_VERSUS = 131;
    MOD_INCREASE_ENERGY_PERCENT = 132;
    MOD_INCREASE_HEALTH_PERCENT = 133;
    MOD_MANA_REGEN_INTERRUPT = 134;
    MOD_HEALING_DONE = 135;
    MOD_HEALING_DONE_PERCENT = 136;
    MOD_TOTAL_STAT_PERCENTAGE = 137;
    MOD_MELEE_HASTE = 138;
    FORCE_REACTION = 139;
    MOD_RANGED_HASTE = 140;
    MOD_RANGED_AMMO_HASTE = 141;
    MOD_BASE_RESISTANCE_PCT = 142;
    MOD_RESISTANCE_EXCLUSIVE = 143;
    SAFE_FALL = 144;
    CHARISMA = 145;
    PERSUADED = 146;
    MECHANIC_IMMUNITY_MASK = 147;
    RETAIN_COMBO_POINTS = 148;
    /// Resist Pushback
    RESIST_PUSHBACK  = 149;
    MOD_SHIELD_BLOCKVALUE_PCT = 150;
    /// Track Stealthed
    TRACK_STEALTHED  = 151;
    /// Mod Detected Range
    MOD_DETECTED_RANGE = 152;
    /// Split Damage Flat
    SPLIT_DAMAGE_FLAT = 153;
    /// Stealth Level Modifier
    MOD_STEALTH_LEVEL = 154;
    /// Mod Water Breathing
    MOD_WATER_BREATHING = 155;
    /// Mod Reputation Gain
    MOD_REPUTATION_GAIN = 156;
    /// Mod Pet Damage
    PET_DAMAGE_MULTI = 157;
    MOD_SHIELD_BLOCKVALUE = 158;
    NO_PVP_CREDIT = 159;
    MOD_AOE_AVOIDANCE = 160;
    MOD_HEALTH_REGEN_IN_COMBAT = 161;
    POWER_BURN_MANA = 162;
    MOD_CRIT_DAMAGE_BONUS = 163;
    UNKNOWN164 = 164;
    MELEE_ATTACK_POWER_ATTACKER_BONUS = 165;
    MOD_ATTACK_POWER_PCT = 166;
    MOD_RANGED_ATTACK_POWER_PCT = 167;
    MOD_DAMAGE_DONE_VERSUS = 168;
    MOD_CRIT_PERCENT_VERSUS = 169;
    DETECT_AMORE = 170;
    MOD_SPEED_NOT_STACK = 171;
    MOD_MOUNTED_SPEED_NOT_STACK = 172;
    ALLOW_CHAMPION_SPELLS = 173;
    /// in 1.12.1 only dependent spirit case
    MOD_SPELL_DAMAGE_OF_STAT_PERCENT = 174;
    MOD_SPELL_HEALING_OF_STAT_PERCENT = 175;
    SPIRIT_OF_REDEMPTION = 176;
    AOE_CHARM = 177;
    MOD_DEBUFF_RESISTANCE = 178;
    MOD_ATTACKER_SPELL_CRIT_CHANCE = 179;
    MOD_FLAT_SPELL_DAMAGE_VERSUS = 180;
    /// unused - possible flat spell crit damage versus
    MOD_FLAT_SPELL_CRIT_DAMAGE_VERSUS = 181;
    MOD_RESISTANCE_OF_STAT_PERCENT = 182;
    MOD_CRITICAL_THREAT = 183;
    MOD_ATTACKER_MELEE_HIT_CHANCE = 184;
    MOD_ATTACKER_RANGED_HIT_CHANCE = 185;
    MOD_ATTACKER_SPELL_HIT_CHANCE = 186;
    MOD_ATTACKER_MELEE_CRIT_CHANCE = 187;
    MOD_ATTACKER_RANGED_CRIT_CHANCE = 188;
    MOD_RATING = 189;
    MOD_FACTION_REPUTATION_GAIN = 190;
    USE_NORMAL_MOVEMENT_SPEED = 191;
} {
    versions = "1.12";
}

struct AuraLog {
    AuraType aura_type;
    if (aura_type == PERIODIC_DAMAGE
     || aura_type == PERIODIC_DAMAGE_PERCENT)
    {
        u32 damage1;
        SpellSchool school;
        u32 absorbed;
        /// vmangos: Sent as int32
        u32 resisted;
    } else if (aura_type == PERIODIC_HEAL
            || aura_type == OBS_MOD_HEALTH)
    {
        u32 damage2;
    } else if (aura_type == OBS_MOD_MANA
            || aura_type == PERIODIC_ENERGIZE)
    {
        /// vmangos: A miscvalue that is dependent on what the aura will do, this is usually decided by the AuraType, ie: with AuraType::SPELL_AURA_MOD_BASE_RESISTANCE_PCT this value could be SpellSchoolMask::SPELL_SCHOOL_MASK_NORMAL which would tell the aura that it should change armor.  If Modifier::m_auraname would have been AuraType::SPELL_AURA_MOUNTED then m_miscvalue would have decided which model the mount should have
        u32 misc_value1;
        u32 damage3;
    } else if (aura_type == PERIODIC_MANA_LEECH)
    {
        /// vmangos: A miscvalue that is dependent on what the aura will do, this is usually decided by the AuraType, ie: with AuraType::SPELL_AURA_MOD_BASE_RESISTANCE_PCT this value could be SpellSchoolMask::SPELL_SCHOOL_MASK_NORMAL which would tell the aura that it should change armor.  If Modifier::m_auraname would have been AuraType::SPELL_AURA_MOUNTED then m_miscvalue would have decided which model the mount should have
        u32 misc_value2;
        u32 damage;
        f32 gain_multiplier;
    }
} {
    versions = "1.12";
}

enum AuraType : u32 {
    NONE = 0;
    BIND_SIGHT = 1;
    MOD_POSSESS = 2;
    /// The aura should do periodic damage, the function that handles this is `Aura::HandlePeriodicDamage`, the amount is usually decided by the `Unit::SpellDamageBonusDone` or `Unit::MeleeDamageBonusDone` which increases/decreases the `Modifier::m_amount`.
    PERIODIC_DAMAGE = 3;
    /// Used by \ref Aura::HandleAuraDummy
    DUMMY = 4;
    /// Used by `Aura::HandleModConfuse`, will either confuse or unconfuse the target depending on whether the apply flag is set
    MOD_CONFUSE = 5;
    MOD_CHARM = 6;
    MOD_FEAR = 7;
    /// The aura will do periodic heals of a target, handled by `Aura::HandlePeriodicHeal`, uses `Unit::SpellHealingBonusDone` to calculate whether to increase or decrease `Modifier::m_amount`
    PERIODIC_HEAL = 8;
    /// Changes the attackspeed, the `Modifier::m_amount` decides how much we change in percent, ie, if the m_amount is 50 the attackspeed will increase by 50%
    MOD_ATTACKSPEED = 9;
    /// Modifies the threat that the Aura does in percent, the `Modifier::m_miscvalue` decides which of the SpellSchools it should affect threat for.
    MOD_THREAT = 10;
    /// Just applies a taunt which will change the threat a mob has taken care of in `Aura::HandleModThreat`
    MOD_TAUNT = 11;
    /// Stuns targets in different ways, taken care of in `Aura::HandleAuraModStun`
    MOD_STUN = 12;
    /// Changes the damage done by a weapon in any hand, the `Modifier::m_miscvalue` will tell what school the damage is from, it's used as a bitmask `SpellSchoolMask`
    MOD_DAMAGE_DONE = 13;
    /// Not handled by the Aura class but instead this is implemented in `Unit::MeleeDamageBonusTaken` and `Unit::SpellBaseDamageBonusTaken`
    MOD_DAMAGE_TAKEN = 14;
    /// Not handled by the Aura class, implemented in `Unit::DealMeleeDamage`
    DAMAGE_SHIELD = 15;
    /// Taken care of in `Aura::HandleModStealth`, take note that this is not the same thing as invisibility
    MOD_STEALTH = 16;
    /// Not handled by the Aura class, implemented in `Unit::IsVisibleForOrDetect` which does a lot of checks to determine whether the person is visible or not, the `AuraType::MOD_STEALTH` seems to determine how in/visible ie a rogue is.
    MOD_STEALTH_DETECT = 17;
    /// Handled by `Aura::HandleInvisibility`, the `Modifier::m_miscvalue` in the struct seems to decide what kind of invisibility it is with a bitflag. the miscvalue decides which bit is set, ie: 3 would make the 3rd bit be set.
    MOD_INVISIBILITY = 18;
    /// Adds one of the kinds of detections to the possible detections. As in `AuraType::SPEALL_AURA_MOD_INVISIBILITY` the `Modifier::m_miscvalue` seems to decide what kind of invisibility the Unit or Player should be able to detect.
    MOD_INVISIBILITY_DETECTION = 19;
    /// unofficial
    OBS_MOD_HEALTH = 20;
    /// unofficial
    OBS_MOD_MANA = 21;
    /// Handled by `Aura::HandleAuraModResistance`, changes the resistance for a Unit the field `Modifier::m_miscvalue` decides which kind of resistance that should be changed
    MOD_RESISTANCE = 22;
    /// Currently just sets `Aura::m_isPeriodic` to apply and has a special case for Curse of the Plaguebringer.
    PERIODIC_TRIGGER_SPELL = 23;
    /// Just sets `Aura::m_isPeriodic` to apply
    PERIODIC_ENERGIZE = 24;
    /// Changes whether the target is pacified or not depending on the apply flag. Pacify makes the target silenced and have all it's attack skill disabled. See: `http://www.wowhead.com/spell=6462/pacified`
    MOD_PACIFY = 25;
    /// Roots or unroots the target
    MOD_ROOT = 26;
    /// Silences the target and stops and spell casts that should be stopped, they have the flag `SpellPreventionType::SPELL_PREVENTION_TYPE_SILENCE`
    MOD_SILENCE = 27;
    REFLECT_SPELLS = 28;
    MOD_STAT = 29;
    MOD_SKILL = 30;
    MOD_INCREASE_SPEED = 31;
    MOD_INCREASE_MOUNTED_SPEED = 32;
    MOD_DECREASE_SPEED = 33;
    MOD_INCREASE_HEALTH = 34;
    MOD_INCREASE_ENERGY = 35;
    MOD_SHAPESHIFT = 36;
    EFFECT_IMMUNITY = 37;
    STATE_IMMUNITY = 38;
    SCHOOL_IMMUNITY = 39;
    DAMAGE_IMMUNITY = 40;
    DISPEL_IMMUNITY = 41;
    PROC_TRIGGER_SPELL = 42;
    PROC_TRIGGER_DAMAGE = 43;
    TRACK_CREATURES = 44;
    TRACK_RESOURCES = 45;
    /// Ignore all Gear test spells
    UNKNOWN46 = 46;
    MOD_PARRY_PERCENT = 47;
    /// One periodic spell
    UNKNOWN48 = 48;
    MOD_DODGE_PERCENT = 49;
    MOD_BLOCK_SKILL = 50;
    MOD_BLOCK_PERCENT = 51;
    MOD_CRIT_PERCENT = 52;
    PERIODIC_LEECH = 53;
    MOD_HIT_CHANCE = 54;
    MOD_SPELL_HIT_CHANCE = 55;
    TRANSFORM = 56;
    MOD_SPELL_CRIT_CHANCE = 57;
    MOD_INCREASE_SWIM_SPEED = 58;
    MOD_DAMAGE_DONE_CREATURE = 59;
    MOD_PACIFY_SILENCE = 60;
    MOD_SCALE = 61;
    PERIODIC_HEALTH_FUNNEL = 62;
    PERIODIC_MANA_FUNNEL = 63;
    PERIODIC_MANA_LEECH = 64;
    MOD_CASTING_SPEED_NOT_STACK = 65;
    FEIGN_DEATH = 66;
    MOD_DISARM = 67;
    MOD_STALKED = 68;
    SCHOOL_ABSORB = 69;
    EXTRA_ATTACKS = 70;
    MOD_SPELL_CRIT_CHANCE_SCHOOL = 71;
    MOD_POWER_COST_SCHOOL_PCT = 72;
    MOD_POWER_COST_SCHOOL = 73;
    REFLECT_SPELLS_SCHOOL = 74;
    MOD_LANGUAGE = 75;
    FAR_SIGHT = 76;
    MECHANIC_IMMUNITY = 77;
    MOUNTED = 78;
    MOD_DAMAGE_PERCENT_DONE = 79;
    MOD_PERCENT_STAT = 80;
    SPLIT_DAMAGE_PCT = 81;
    WATER_BREATHING = 82;
    MOD_BASE_RESISTANCE = 83;
    MOD_REGEN = 84;
    MOD_POWER_REGEN = 85;
    CHANNEL_DEATH_ITEM = 86;
    MOD_DAMAGE_PERCENT_TAKEN = 87;
    MOD_HEALTH_REGEN_PERCENT = 88;
    PERIODIC_DAMAGE_PERCENT = 89;
    MOD_RESIST_CHANCE = 90;
    MOD_DETECT_RANGE = 91;
    PREVENTS_FLEEING = 92;
    MOD_UNATTACKABLE = 93;
    INTERRUPT_REGEN = 94;
    GHOST = 95;
    SPELL_MAGNET = 96;
    MANA_SHIELD = 97;
    MOD_SKILL_TALENT = 98;
    MOD_ATTACK_POWER = 99;
    AURAS_VISIBLE = 100;
    MOD_RESISTANCE_PCT = 101;
    MOD_MELEE_ATTACK_POWER_VERSUS = 102;
    MOD_TOTAL_THREAT = 103;
    WATER_WALK = 104;
    FEATHER_FALL = 105;
    HOVER = 106;
    ADD_FLAT_MODIFIER = 107;
    ADD_PCT_MODIFIER = 108;
    ADD_TARGET_TRIGGER = 109;
    MOD_POWER_REGEN_PERCENT = 110;
    ADD_CASTER_HIT_TRIGGER = 111;
    OVERRIDE_CLASS_SCRIPTS = 112;
    MOD_RANGED_DAMAGE_TAKEN = 113;
    MOD_RANGED_DAMAGE_TAKEN_PCT = 114;
    MOD_HEALING = 115;
    MOD_REGEN_DURING_COMBAT = 116;
    MOD_MECHANIC_RESISTANCE = 117;
    MOD_HEALING_PCT = 118;
    SHARE_PET_TRACKING = 119;
    UNTRACKABLE = 120;
    EMPATHY = 121;
    MOD_OFFHAND_DAMAGE_PCT = 122;
    MOD_TARGET_RESISTANCE = 123;
    MOD_RANGED_ATTACK_POWER = 124;
    MOD_MELEE_DAMAGE_TAKEN = 125;
    MOD_MELEE_DAMAGE_TAKEN_PCT = 126;
    RANGED_ATTACK_POWER_ATTACKER_BONUS = 127;
    MOD_POSSESS_PET = 128;
    MOD_SPEED_ALWAYS = 129;
    MOD_MOUNTED_SPEED_ALWAYS = 130;
    MOD_RANGED_ATTACK_POWER_VERSUS = 131;
    MOD_INCREASE_ENERGY_PERCENT = 132;
    MOD_INCREASE_HEALTH_PERCENT = 133;
    MOD_MANA_REGEN_INTERRUPT = 134;
    MOD_HEALING_DONE = 135;
    MOD_HEALING_DONE_PERCENT = 136;
    MOD_TOTAL_STAT_PERCENTAGE = 137;
    MOD_MELEE_HASTE = 138;
    FORCE_REACTION = 139;
    MOD_RANGED_HASTE = 140;
    MOD_RANGED_AMMO_HASTE = 141;
    MOD_BASE_RESISTANCE_PCT = 142;
    MOD_RESISTANCE_EXCLUSIVE = 143;
    SAFE_FALL = 144;
    CHARISMA = 145;
    PERSUADED = 146;
    MECHANIC_IMMUNITY_MASK = 147;
    RETAIN_COMBO_POINTS = 148;
    ///    Resist Pushback
    RESIST_PUSHBACK  = 149;
    MOD_SHIELD_BLOCKVALUE_PCT = 150;
    ///    Track Stealthed
    TRACK_STEALTHED  = 151;
    ///    Mod Detected Range
    MOD_DETECTED_RANGE = 152;
    ///    Split Damage Flat
    SPLIT_DAMAGE_FLAT = 153;
    ///    Stealth Level Modifier
    MOD_STEALTH_LEVEL = 154;
    ///    Mod Water Breathing
    MOD_WATER_BREATHING = 155;
    ///    Mod Reputation Gain
    MOD_REPUTATION_GAIN = 156;
    ///    Mod Pet Damage
    PET_DAMAGE_MULTI = 157;
    MOD_SHIELD_BLOCKVALUE = 158;
    NO_PVP_CREDIT = 159;
    /// Reduces the hit chance for AOE spells
    MOD_AOE_AVOIDANCE = 160;
    MOD_HEALTH_REGEN_IN_COMBAT = 161;
    POWER_BURN_MANA = 162;
    MOD_CRIT_DAMAGE_BONUS = 163;
    UNKNOWN164 = 164;
    MELEE_ATTACK_POWER_ATTACKER_BONUS = 165;
    MOD_ATTACK_POWER_PCT = 166;
    MOD_RANGED_ATTACK_POWER_PCT = 167;
    MOD_DAMAGE_DONE_VERSUS = 168;
    MOD_CRIT_PERCENT_VERSUS = 169;
    DETECT_AMORE = 170;
    MOD_SPEED_NOT_STACK = 171;
    MOD_MOUNTED_SPEED_NOT_STACK = 172;
    ALLOW_CHAMPION_SPELLS = 173;
    /// by defeult intelect, dependent from MOD_SPELL_HEALING_OF_STAT_PERCENT
    MOD_SPELL_DAMAGE_OF_STAT_PERCENT = 174;
    MOD_SPELL_HEALING_OF_STAT_PERCENT = 175;
    SPIRIT_OF_REDEMPTION = 176;
    AOE_CHARM = 177;
    MOD_DEBUFF_RESISTANCE = 178;
    MOD_ATTACKER_SPELL_CRIT_CHANCE = 179;
    MOD_FLAT_SPELL_DAMAGE_VERSUS = 180;
    /// unused - possible flat spell crit damage versus
    MOD_FLAT_SPELL_CRIT_DAMAGE_VERSUS = 181;
    MOD_RESISTANCE_OF_STAT_PERCENT = 182;
    MOD_CRITICAL_THREAT = 183;
    MOD_ATTACKER_MELEE_HIT_CHANCE = 184;
    MOD_ATTACKER_RANGED_HIT_CHANCE = 185;
    MOD_ATTACKER_SPELL_HIT_CHANCE = 186;
    MOD_ATTACKER_MELEE_CRIT_CHANCE = 187;
    MOD_ATTACKER_RANGED_CRIT_CHANCE = 188;
    MOD_RATING = 189;
    MOD_FACTION_REPUTATION_GAIN = 190;
    USE_NORMAL_MOVEMENT_SPEED = 191;
    MOD_MELEE_RANGED_HASTE = 192;
    HASTE_ALL = 193;
    /// not used now, old MOD_SPELL_DAMAGE_OF_INTELLECT
    MOD_DEPRICATED_1  = 194;
    /// not used now, old MOD_SPELL_HEALING_OF_INTELLECT
    MOD_DEPRICATED_2  = 195;
    /// only 24818 Noxious Breath
    MOD_COOLDOWN = 196;
    MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE = 197;
    MOD_ALL_WEAPON_SKILLS = 198;
    MOD_INCREASES_SPELL_PCT_TO_HIT = 199;
    MOD_XP_PCT = 200;
    FLY = 201;
    IGNORE_COMBAT_RESULT = 202;
    MOD_ATTACKER_MELEE_CRIT_DAMAGE = 203;
    MOD_ATTACKER_RANGED_CRIT_DAMAGE = 204;
    MOD_ATTACKER_SPELL_CRIT_DAMAGE = 205;
    MOD_FLIGHT_SPEED = 206;
    MOD_FLIGHT_SPEED_MOUNTED = 207;
    MOD_FLIGHT_SPEED_STACKING = 208;
    MOD_FLIGHT_SPEED_MOUNTED_STACKING = 209;
    MOD_FLIGHT_SPEED_NOT_STACKING = 210;
    MOD_FLIGHT_SPEED_MOUNTED_NOT_STACKING = 211;
    MOD_RANGED_ATTACK_POWER_OF_STAT_PERCENT = 212;
    MOD_RAGE_FROM_DAMAGE_DEALT = 213;
    UNKNOWN214 = 214;
    ARENA_PREPARATION = 215;
    HASTE_SPELLS = 216;
    UNKNOWN217 = 217;
    HASTE_RANGED = 218;
    MOD_MANA_REGEN_FROM_STAT = 219;
    MOD_RATING_FROM_STAT = 220;
    UNKNOWN221 = 221;
    UNKNOWN222 = 222;
    UNKNOWN223 = 223;
    UNKNOWN224 = 224;
    PRAYER_OF_MENDING = 225;
    PERIODIC_DUMMY = 226;
    PERIODIC_TRIGGER_SPELL_WITH_VALUE = 227;
    DETECT_STEALTH = 228;
    MOD_AOE_DAMAGE_AVOIDANCE = 229;
    UNKNOWN230 = 230;
    PROC_TRIGGER_SPELL_WITH_VALUE = 231;
    MECHANIC_DURATION_MOD = 232;
    UNKNOWN233 = 233;
    MECHANIC_DURATION_MOD_NOT_STACK = 234;
    MOD_DISPEL_RESIST = 235;
    UNKNOWN236 = 236;
    MOD_SPELL_DAMAGE_OF_ATTACK_POWER = 237;
    MOD_SPELL_HEALING_OF_ATTACK_POWER = 238;
    MOD_SCALE_2 = 239;
    MOD_EXPERTISE = 240;
    FORCE_MOVE_FORWARD = 241;
    UNKNOWN242 = 242;
    UNKNOWN243 = 243;
    COMPREHEND_LANGUAGE = 244;
    UNKNOWN245 = 245;
    UNKNOWN246 = 246;
    MIRROR_IMAGE = 247;
    MOD_COMBAT_RESULT_CHANCE = 248;
    UNKNOWN249 = 249;
    MOD_INCREASE_HEALTH_2 = 250;
    MOD_ENEMY_DODGE = 251;
    UNKNOWN252 = 252;
    UNKNOWN253 = 253;
    UNKNOWN254 = 254;
    UNKNOWN255 = 255;
    UNKNOWN256 = 256;
    UNKNOWN257 = 257;
    UNKNOWN258 = 258;
    UNKNOWN259 = 259;
    UNKNOWN260 = 260;
    UNKNOWN261 = 261;
} {
    versions = "2.4.3";
}

struct AuraLog {
    AuraType aura_type;
    if (aura_type == PERIODIC_DAMAGE
     || aura_type == PERIODIC_DAMAGE_PERCENT)
    {
        u32 damage1;
        SpellSchool school;
        u32 absorbed;
        /// vmangos: Sent as int32
        u32 resisted;
    } else if (aura_type == PERIODIC_HEAL
            || aura_type == OBS_MOD_HEALTH)
    {
        u32 damage2;
    } else if (aura_type == OBS_MOD_MANA
            || aura_type == PERIODIC_ENERGIZE)
    {
        /// vmangos: A miscvalue that is dependent on what the aura will do, this is usually decided by the AuraType, ie: with AuraType::SPELL_AURA_MOD_BASE_RESISTANCE_PCT this value could be SpellSchoolMask::SPELL_SCHOOL_MASK_NORMAL which would tell the aura that it should change armor.  If Modifier::m_auraname would have been AuraType::SPELL_AURA_MOUNTED then m_miscvalue would have decided which model the mount should have
        u32 misc_value1;
        u32 damage3;
    } else if (aura_type == PERIODIC_MANA_LEECH)
    {
        /// vmangos: A miscvalue that is dependent on what the aura will do, this is usually decided by the AuraType, ie: with AuraType::SPELL_AURA_MOD_BASE_RESISTANCE_PCT this value could be SpellSchoolMask::SPELL_SCHOOL_MASK_NORMAL which would tell the aura that it should change armor.  If Modifier::m_auraname would have been AuraType::SPELL_AURA_MOUNTED then m_miscvalue would have decided which model the mount should have
        u32 misc_value2;
        u32 damage;
        f32 gain_multiplier;
    }
} {
    versions = "2.4.3";
}

enum AuraType : u32 {
    NONE = 0;
    BIND_SIGHT = 1;
    MOD_POSSESS = 2;
    PERIODIC_DAMAGE = 3;
    DUMMY = 4;
    MOD_CONFUSE = 5;
    MOD_CHARM = 6;
    MOD_FEAR = 7;
    PERIODIC_HEAL = 8;
    MOD_ATTACKSPEED = 9;
    MOD_THREAT = 10;
    MOD_TAUNT = 11;
    MOD_STUN = 12;
    MOD_DAMAGE_DONE = 13;
    MOD_DAMAGE_TAKEN = 14;
    DAMAGE_SHIELD = 15;
    MOD_STEALTH = 16;
    MOD_STEALTH_DETECT = 17;
    MOD_INVISIBILITY = 18;
    MOD_INVISIBILITY_DETECT = 19;
    /// 20, 21 unofficial
    OBS_MOD_HEALTH = 20;
    OBS_MOD_POWER = 21;
    MOD_RESISTANCE = 22;
    PERIODIC_TRIGGER_SPELL = 23;
    PERIODIC_ENERGIZE = 24;
    MOD_PACIFY = 25;
    MOD_ROOT = 26;
    MOD_SILENCE = 27;
    REFLECT_SPELLS = 28;
    MOD_STAT = 29;
    MOD_SKILL = 30;
    MOD_INCREASE_SPEED = 31;
    MOD_INCREASE_MOUNTED_SPEED = 32;
    MOD_DECREASE_SPEED = 33;
    MOD_INCREASE_HEALTH = 34;
    MOD_INCREASE_ENERGY = 35;
    MOD_SHAPESHIFT = 36;
    EFFECT_IMMUNITY = 37;
    STATE_IMMUNITY = 38;
    SCHOOL_IMMUNITY = 39;
    DAMAGE_IMMUNITY = 40;
    DISPEL_IMMUNITY = 41;
    PROC_TRIGGER_SPELL = 42;
    PROC_TRIGGER_DAMAGE = 43;
    TRACK_CREATURES = 44;
    TRACK_RESOURCES = 45;
    /// Ignore all Gear test spells
    UNKNOWN46 = 46;
    MOD_PARRY_PERCENT = 47;
    /// One periodic spell
    PERIODIC_TRIGGER_SPELL_FROM_CLIENT = 48;
    MOD_DODGE_PERCENT = 49;
    MOD_CRITICAL_HEALING_AMOUNT = 50;
    MOD_BLOCK_PERCENT = 51;
    MOD_WEAPON_CRIT_PERCENT = 52;
    PERIODIC_LEECH = 53;
    MOD_HIT_CHANCE = 54;
    MOD_SPELL_HIT_CHANCE = 55;
    TRANSFORM = 56;
    MOD_SPELL_CRIT_CHANCE = 57;
    MOD_INCREASE_SWIM_SPEED = 58;
    MOD_DAMAGE_DONE_CREATURE = 59;
    MOD_PACIFY_SILENCE = 60;
    MOD_SCALE = 61;
    PERIODIC_HEALTH_FUNNEL = 62;
    /// old PERIODIC_MANA_FUNNEL
    UNKNOWN63 = 63;
    PERIODIC_MANA_LEECH = 64;
    MOD_CASTING_SPEED_NOT_STACK = 65;
    FEIGN_DEATH = 66;
    MOD_DISARM = 67;
    MOD_STALKED = 68;
    SCHOOL_ABSORB = 69;
    EXTRA_ATTACKS = 70;
    MOD_SPELL_CRIT_CHANCE_SCHOOL = 71;
    MOD_POWER_COST_SCHOOL_PCT = 72;
    MOD_POWER_COST_SCHOOL = 73;
    REFLECT_SPELLS_SCHOOL = 74;
    MOD_LANGUAGE = 75;
    FAR_SIGHT = 76;
    MECHANIC_IMMUNITY = 77;
    MOUNTED = 78;
    MOD_DAMAGE_PERCENT_DONE = 79;
    MOD_PERCENT_STAT = 80;
    SPLIT_DAMAGE_PCT = 81;
    WATER_BREATHING = 82;
    MOD_BASE_RESISTANCE = 83;
    MOD_REGEN = 84;
    MOD_POWER_REGEN = 85;
    CHANNEL_DEATH_ITEM = 86;
    MOD_DAMAGE_PERCENT_TAKEN = 87;
    MOD_HEALTH_REGEN_PERCENT = 88;
    PERIODIC_DAMAGE_PERCENT = 89;
    /// old MOD_RESIST_CHANCE
    UNKNOWN90 = 90;
    MOD_DETECT_RANGE = 91;
    PREVENTS_FLEEING = 92;
    MOD_UNATTACKABLE = 93;
    INTERRUPT_REGEN = 94;
    GHOST = 95;
    SPELL_MAGNET = 96;
    MANA_SHIELD = 97;
    MOD_SKILL_TALENT = 98;
    MOD_ATTACK_POWER = 99;
    AURAS_VISIBLE = 100;
    MOD_RESISTANCE_PCT = 101;
    MOD_MELEE_ATTACK_POWER_VERSUS = 102;
    MOD_TOTAL_THREAT = 103;
    WATER_WALK = 104;
    FEATHER_FALL = 105;
    HOVER = 106;
    ADD_FLAT_MODIFIER = 107;
    ADD_PCT_MODIFIER = 108;
    ADD_TARGET_TRIGGER = 109;
    MOD_POWER_REGEN_PERCENT = 110;
    ADD_CASTER_HIT_TRIGGER = 111;
    OVERRIDE_CLASS_SCRIPTS = 112;
    MOD_RANGED_DAMAGE_TAKEN = 113;
    MOD_RANGED_DAMAGE_TAKEN_PCT = 114;
    MOD_HEALING = 115;
    MOD_REGEN_DURING_COMBAT = 116;
    MOD_MECHANIC_RESISTANCE = 117;
    MOD_HEALING_PCT = 118;
    /// old SHARE_PET_TRACKING
    UNKNOWN119 = 119;
    UNTRACKABLE = 120;
    EMPATHY = 121;
    MOD_OFFHAND_DAMAGE_PCT = 122;
    MOD_TARGET_RESISTANCE = 123;
    MOD_RANGED_ATTACK_POWER = 124;
    MOD_MELEE_DAMAGE_TAKEN = 125;
    MOD_MELEE_DAMAGE_TAKEN_PCT = 126;
    RANGED_ATTACK_POWER_ATTACKER_BONUS = 127;
    MOD_POSSESS_PET = 128;
    MOD_SPEED_ALWAYS = 129;
    MOD_MOUNTED_SPEED_ALWAYS = 130;
    MOD_RANGED_ATTACK_POWER_VERSUS = 131;
    MOD_INCREASE_ENERGY_PERCENT = 132;
    MOD_INCREASE_HEALTH_PERCENT = 133;
    MOD_MANA_REGEN_INTERRUPT = 134;
    MOD_HEALING_DONE = 135;
    MOD_HEALING_DONE_PERCENT = 136;
    MOD_TOTAL_STAT_PERCENTAGE = 137;
    MOD_MELEE_HASTE = 138;
    FORCE_REACTION = 139;
    MOD_RANGED_HASTE = 140;
    MOD_RANGED_AMMO_HASTE = 141;
    MOD_BASE_RESISTANCE_PCT = 142;
    MOD_RESISTANCE_EXCLUSIVE = 143;
    SAFE_FALL = 144;
    MOD_PET_TALENT_POINTS = 145;
    ALLOW_TAME_PET_TYPE = 146;
    MECHANIC_IMMUNITY_MASK = 147;
    RETAIN_COMBO_POINTS = 148;
    ///    Reduce Pushback
    REDUCE_PUSHBACK = 149;
    MOD_SHIELD_BLOCKVALUE_PCT = 150;
    ///    Track Stealthed
    TRACK_STEALTHED = 151;
    ///    Mod Detected Range
    MOD_DETECTED_RANGE = 152;
    ///    Split Damage Flat
    SPLIT_DAMAGE_FLAT = 153;
    ///    Stealth Level Modifier
    MOD_STEALTH_LEVEL = 154;
    ///    Mod Water Breathing
    MOD_WATER_BREATHING = 155;
    ///    Mod Reputation Gain
    MOD_REPUTATION_GAIN = 156;
    ///    Mod Pet Damage
    PET_DAMAGE_MULTI = 157;
    MOD_SHIELD_BLOCKVALUE = 158;
    NO_PVP_CREDIT = 159;
    MOD_AOE_AVOIDANCE = 160;
    MOD_HEALTH_REGEN_IN_COMBAT = 161;
    POWER_BURN = 162;
    MOD_CRIT_DAMAGE_BONUS = 163;
    UNKNOWN164 = 164;
    MELEE_ATTACK_POWER_ATTACKER_BONUS = 165;
    MOD_ATTACK_POWER_PCT = 166;
    MOD_RANGED_ATTACK_POWER_PCT = 167;
    MOD_DAMAGE_DONE_VERSUS = 168;
    MOD_CRIT_PERCENT_VERSUS = 169;
    DETECT_AMORE = 170;
    MOD_SPEED_NOT_STACK = 171;
    MOD_MOUNTED_SPEED_NOT_STACK = 172;
    /// old ALLOW_CHAMPION_SPELLS
    UNKNOWN173 = 173;
    /// by defeult intelect, dependent from MOD_SPELL_HEALING_OF_STAT_PERCENT
    MOD_SPELL_DAMAGE_OF_STAT_PERCENT = 174;
    MOD_SPELL_HEALING_OF_STAT_PERCENT = 175;
    SPIRIT_OF_REDEMPTION = 176;
    AOE_CHARM = 177;
    MOD_DEBUFF_RESISTANCE = 178;
    MOD_ATTACKER_SPELL_CRIT_CHANCE = 179;
    MOD_FLAT_SPELL_DAMAGE_VERSUS = 180;
    /// old MOD_FLAT_SPELL_CRIT_DAMAGE_VERSUS - possible flat spell crit damage versus
    UNKNOWN181 = 181;
    MOD_RESISTANCE_OF_STAT_PERCENT = 182;
    MOD_CRITICAL_THREAT = 183;
    MOD_ATTACKER_MELEE_HIT_CHANCE = 184;
    MOD_ATTACKER_RANGED_HIT_CHANCE = 185;
    MOD_ATTACKER_SPELL_HIT_CHANCE = 186;
    MOD_ATTACKER_MELEE_CRIT_CHANCE = 187;
    MOD_ATTACKER_RANGED_CRIT_CHANCE = 188;
    MOD_RATING = 189;
    MOD_FACTION_REPUTATION_GAIN = 190;
    USE_NORMAL_MOVEMENT_SPEED = 191;
    MOD_MELEE_RANGED_HASTE = 192;
    MELEE_SLOW = 193;
    MOD_TARGET_ABSORB_SCHOOL = 194;
    MOD_TARGET_ABILITY_ABSORB_SCHOOL = 195;
    /// only 24818 Noxious Breath
    MOD_COOLDOWN = 196;
    MOD_ATTACKER_SPELL_AND_WEAPON_CRIT_CHANCE = 197;
    /// old MOD_ALL_WEAPON_SKILLS
    UNKNOWN198 = 198;
    MOD_INCREASES_SPELL_PCT_TO_HIT = 199;
    MOD_XP_PCT = 200;
    FLY = 201;
    IGNORE_COMBAT_RESULT = 202;
    MOD_ATTACKER_MELEE_CRIT_DAMAGE = 203;
    MOD_ATTACKER_RANGED_CRIT_DAMAGE = 204;
    MOD_SCHOOL_CRIT_DMG_TAKEN = 205;
    MOD_INCREASE_VEHICLE_FLIGHT_SPEED = 206;
    MOD_INCREASE_MOUNTED_FLIGHT_SPEED = 207;
    MOD_INCREASE_FLIGHT_SPEED = 208;
    MOD_MOUNTED_FLIGHT_SPEED_ALWAYS = 209;
    MOD_VEHICLE_SPEED_ALWAYS = 210;
    MOD_FLIGHT_SPEED_NOT_STACK = 211;
    MOD_RANGED_ATTACK_POWER_OF_STAT_PERCENT = 212;
    MOD_RAGE_FROM_DAMAGE_DEALT = 213;
    UNKNOWN214 = 214;
    ARENA_PREPARATION = 215;
    HASTE_SPELLS = 216;
    /// NYI
    MOD_MELEE_HASTE_2 = 217;
    HASTE_RANGED = 218;
    MOD_MANA_REGEN_FROM_STAT = 219;
    MOD_RATING_FROM_STAT = 220;
    MOD_DETAUNT = 221;
    UNKNOWN222 = 222;
    RAID_PROC_FROM_CHARGE = 223;
    UNKNOWN224 = 224;
    RAID_PROC_FROM_CHARGE_WITH_VALUE = 225;
    PERIODIC_DUMMY = 226;
    PERIODIC_TRIGGER_SPELL_WITH_VALUE = 227;
    DETECT_STEALTH = 228;
    MOD_AOE_DAMAGE_AVOIDANCE = 229;
    UNKNOWN230 = 230;
    PROC_TRIGGER_SPELL_WITH_VALUE = 231;
    MECHANIC_DURATION_MOD = 232;
    /// client-side only
    CHANGE_MODEL_FOR_ALL_HUMANOIDS = 233;
    MECHANIC_DURATION_MOD_NOT_STACK = 234;
    MOD_DISPEL_RESIST = 235;
    CONTROL_VEHICLE = 236;
    MOD_SPELL_DAMAGE_OF_ATTACK_POWER = 237;
    MOD_SPELL_HEALING_OF_ATTACK_POWER = 238;
    MOD_SCALE_2 = 239;
    MOD_EXPERTISE = 240;
    FORCE_MOVE_FORWARD = 241;
    MOD_SPELL_DAMAGE_FROM_HEALING = 242;
    MOD_FACTION = 243;
    COMPREHEND_LANGUAGE = 244;
    MOD_AURA_DURATION_BY_DISPEL = 245;
    MOD_AURA_DURATION_BY_DISPEL_NOT_STACK = 246;
    CLONE_CASTER = 247;
    MOD_COMBAT_RESULT_CHANCE = 248;
    CONVERT_RUNE = 249;
    MOD_INCREASE_HEALTH_2 = 250;
    MOD_ENEMY_DODGE = 251;
    MOD_SPEED_SLOW_ALL = 252;
    MOD_BLOCK_CRIT_CHANCE = 253;
    MOD_DISARM_OFFHAND = 254;
    MOD_MECHANIC_DAMAGE_TAKEN_PERCENT = 255;
    NO_REAGENT_USE = 256;
    MOD_TARGET_RESIST_BY_SPELL_CLASS = 257;
    UNKNOWN258 = 258;
    MOD_HOT_PCT = 259;
    SCREEN_EFFECT = 260;
    PHASE = 261;
    ABILITY_IGNORE_AURASTATE = 262;
    ALLOW_ONLY_ABILITY = 263;
    UNKNOWN264 = 264;
    UNKNOWN265 = 265;
    UNKNOWN266 = 266;
    MOD_IMMUNE_AURA_APPLY_SCHOOL = 267;
    MOD_ATTACK_POWER_OF_STAT_PERCENT = 268;
    MOD_IGNORE_TARGET_RESIST = 269;
    /// Possibly need swap vs 195 aura used only in 1 spell Chaos Bolt Passive
    MOD_ABILITY_IGNORE_TARGET_RESIST = 270;
    MOD_DAMAGE_FROM_CASTER = 271;
    IGNORE_MELEE_RESET = 272;
    X_RAY = 273;
    ABILITY_CONSUME_NO_AMMO = 274;
    MOD_IGNORE_SHAPESHIFT = 275;
    /// NYI
    MOD_DAMAGE_DONE_FOR_MECHANIC = 276;
    MOD_MAX_AFFECTED_TARGETS = 277;
    MOD_DISARM_RANGED = 278;
    INITIALIZE_IMAGES = 279;
    MOD_ARMOR_PENETRATION_PCT = 280;
    MOD_HONOR_GAIN_PCT = 281;
    MOD_BASE_HEALTH_PCT = 282;
    /// Possibly only for some spell family class spells
    MOD_HEALING_RECEIVED = 283;
    LINKED = 284;
    MOD_ATTACK_POWER_OF_ARMOR = 285;
    ABILITY_PERIODIC_CRIT = 286;
    DEFLECT_SPELLS = 287;
    IGNORE_HIT_DIRECTION = 288;
    PREVENT_DURABILITY_LOSS = 289;
    MOD_CRIT_PCT = 290;
    MOD_XP_QUEST_PCT = 291;
    OPEN_STABLE = 292;
    OVERRIDE_SPELLS = 293;
    PREVENT_REGENERATE_POWER = 294;
    UNKNOWN295 = 295;
    SET_VEHICLE_ID = 296;
    BLOCK_SPELL_FAMILY = 297;
    STRANGULATE = 298;
    UNKNOWN299 = 299;
    SHARE_DAMAGE_PCT = 300;
    SCHOOL_HEAL_ABSORB = 301;
    UNKNOWN302 = 302;
    MOD_DAMAGE_DONE_VERSUS_AURASTATE = 303;
    MOD_FAKE_INEBRIATE = 304;
    MOD_MINIMUM_SPEED = 305;
    UNKNOWN306 = 306;
    HEAL_ABSORB_TEST = 307;
    MOD_CRIT_CHANCE_FOR_CASTER = 308;
    UNKNOWN309 = 309;
    MOD_CREATURE_AOE_DAMAGE_AVOIDANCE = 310;
    UNKNOWN311 = 311;
    UNKNOWN312 = 312;
    UNKNOWN313 = 313;
    PREVENT_RESURRECTION = 314;
    UNDERWATER_WALKING = 315;
    PERIODIC_HASTE = 316;
} {
    versions = "3.3.5";
}

struct AuraLog {
    AuraType aura_type;
    if (aura_type == PERIODIC_DAMAGE
     || aura_type == PERIODIC_DAMAGE_PERCENT)
    {
        u32 damage1;
        u32 overkill_damage;
        SpellSchool school;
        u32 absorb1;
        /// vmangos: Sent as int32
        u32 resisted;
        /// new 3.1.2 critical tick
        Bool critical1;
    } else if (aura_type == PERIODIC_HEAL
            || aura_type == OBS_MOD_HEALTH)
    {
        u32 damage2;
        u32 over_damage;
        u32 absorb2;
        /// new 3.1.2 critical tick
        Bool critical2;
    } else if (aura_type == OBS_MOD_POWER
            || aura_type == PERIODIC_ENERGIZE)
    {
        /// vmangos: A miscvalue that is dependent on what the aura will do, this is usually decided by the AuraType, ie: with AuraType::SPELL_AURA_MOD_BASE_RESISTANCE_PCT this value could be SpellSchoolMask::SPELL_SCHOOL_MASK_NORMAL which would tell the aura that it should change armor.  If Modifier::m_auraname would have been AuraType::SPELL_AURA_MOUNTED then m_miscvalue would have decided which model the mount should have
        u32 misc_value1;
        u32 damage3;
    } else if (aura_type == PERIODIC_MANA_LEECH)
    {
        /// vmangos: A miscvalue that is dependent on what the aura will do, this is usually decided by the AuraType, ie: with AuraType::SPELL_AURA_MOD_BASE_RESISTANCE_PCT this value could be SpellSchoolMask::SPELL_SCHOOL_MASK_NORMAL which would tell the aura that it should change armor.  If Modifier::m_auraname would have been AuraType::SPELL_AURA_MOUNTED then m_miscvalue would have decided which model the mount should have
        u32 misc_value2;
        u32 damage4;
        f32 gain_multiplier;
    }
} {
    versions = "3.3.5";
}
