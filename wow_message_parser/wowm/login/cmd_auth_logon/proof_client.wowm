
struct TelemetryKey {
    u16 unknown1;
    u32 unknown2;
    u8[4] unknown3;
    /// SHA1 hash of the session key, server public key, and an unknown 20 byte value.
    u8[20] cd_key_proof;
} {
    login_versions = "2 3 5 6 7 8";
}

/// Reply after successful [CMD_AUTH_LOGON_CHALLENGE_Server].
clogin CMD_AUTH_LOGON_PROOF_Client = 0x01 {
    u8[32] client_public_key;
    u8[20] client_proof;
    u8[20] crc_hash;
    u8 number_of_telemetry_keys;
    TelemetryKey[number_of_telemetry_keys] telemetry_keys;
} {
    login_versions = "2";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [
        {
            unknown1 = 0xFF;
            unknown2 = 0xDEADBEEF;
            unknown3 = [ 0x01, 0x02, 0x03, 0x04, ];
            cd_key_proof = [ 0x00, 0x01, 0x02, 0x03,
                         0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b,
                         0x0c, 0x0d, 0x0e, 0x0f,
                         0x10, 0x11, 0x12, 0x13, ];
        },
        {
            unknown1 = 0xFE;
            unknown2 = 0xDEADBEEE;
            unknown3 = [ 0x00, 0x01, 0x02, 0x03, ];
            cd_key_proof = [ 0x01, 0x02, 0x03, 0x04,
                         0x05, 0x06, 0x07, 0x08,
                         0x09, 0x0a, 0x0b, 0x0c,
                         0x0d, 0x0e, 0x0f, 0x10,
                         0x11, 0x12, 0x13, 0x14, ];
        },
    ];
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x02, /* Num keys: 2 */
    0xFF, 0x00, /* TelemetryKey unknown1 */
    0xEF, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x01, 0x02, 0x03, 0x04, /* TelemetryKey unknown3 */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* TelemetryKey cd_key_proof */
    0xFE, 0x00, /* TelemetryKey unknown1 */
    0xEE, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x00, 0x01, 0x02, 0x03, /* TelemetryKey unknown3 */
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
    0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, /* TelemetryKey cd_key_proof */
] {
    login_versions = "2";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [
        {
            unknown1 = 0xFF;
            unknown2 = 0xDEADBEEF;
            unknown3 = [ 0x01, 0x02, 0x03, 0x04, ];
            cd_key_proof = [ 0x00, 0x01, 0x02, 0x03,
                         0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b,
                         0x0c, 0x0d, 0x0e, 0x0f,
                         0x10, 0x11, 0x12, 0x13, ];
        },
    ];
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x01, /* Num keys: 1 */
    0xFF, 0x00, /* TelemetryKey unknown1 */
    0xEF, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x01, 0x02, 0x03, 0x04, /* TelemetryKey unknown3 */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* TelemetryKey cd_key_proof */
] {
    login_versions = "2";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [ ];
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x00, /* Num keys: 0 */
] {
    login_versions = "2";
}

/// Reply after successful [CMD_AUTH_LOGON_CHALLENGE_Server].
clogin CMD_AUTH_LOGON_PROOF_Client = 0x01 {
    u8[32] client_public_key;
    u8[20] client_proof;
    u8[20] crc_hash;
    u8 number_of_telemetry_keys;
    TelemetryKey[number_of_telemetry_keys] telemetry_keys;

    SecurityFlag security_flag;
    if (security_flag == PIN) {
        u8[16] pin_salt;
        u8[20] pin_hash;
    }
} {
    login_versions = "3";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [
        {
            unknown1 = 0xFF;
            unknown2 = 0xDEADBEEF;
            unknown3 = [ 0x01, 0x02, 0x03, 0x04, ];
            cd_key_proof = [ 0x00, 0x01, 0x02, 0x03,
                         0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b,
                         0x0c, 0x0d, 0x0e, 0x0f,
                         0x10, 0x11, 0x12, 0x13, ];
        },
        {
            unknown1 = 0xFE;
            unknown2 = 0xDEADBEEE;
            unknown3 = [ 0x00, 0x01, 0x02, 0x03, ];
            cd_key_proof = [ 0x01, 0x02, 0x03, 0x04,
                         0x05, 0x06, 0x07, 0x08,
                         0x09, 0x0a, 0x0b, 0x0c,
                         0x0d, 0x0e, 0x0f, 0x10,
                         0x11, 0x12, 0x13, 0x14, ];
        },
    ];
    security_flag = NONE;
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x02, /* Num keys: 2 */
    0xFF, 0x00, /* TelemetryKey unknown1 */
    0xEF, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x01, 0x02, 0x03, 0x04, /* TelemetryKey unknown3 */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* TelemetryKey cd_key_proof */
    0xFE, 0x00, /* TelemetryKey unknown1 */
    0xEE, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x00, 0x01, 0x02, 0x03, /* TelemetryKey unknown3 */
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
    0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, /* TelemetryKey cd_key_proof */
    0x00, /* security_flag NONE */
] {
    login_versions = "3";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [
        {
            unknown1 = 0xFF;
            unknown2 = 0xDEADBEEF;
            unknown3 = [ 0x01, 0x02, 0x03, 0x04, ];
            cd_key_proof = [ 0x00, 0x01, 0x02, 0x03,
                         0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b,
                         0x0c, 0x0d, 0x0e, 0x0f,
                         0x10, 0x11, 0x12, 0x13, ];
        },
    ];
    security_flag = NONE;
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x01, /* Num keys: 1 */
    0xFF, 0x00, /* TelemetryKey unknown1 */
    0xEF, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x01, 0x02, 0x03, 0x04, /* TelemetryKey unknown3 */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* TelemetryKey cd_key_proof */
    0x00, /* security_flag NONE */
] {
    login_versions = "3";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [ ];
    security_flag = NONE;
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x00, /* Num keys: 0 */
    0x00, /* security_flag NONE */
] {
    login_versions = "3";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [ ];
    security_flag = PIN;
    pin_salt = [ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
                 0x0e, 0x0f,];
    pin_hash = [ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
                 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13,];
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x00, /* Num keys: 0 */
    0x01, /* security_flag PIN */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
    0x0e, 0x0f, /* pin_salt */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
    0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* pin_hash */
] {
    login_versions = "3";
}

/// Reply after successful [CMD_AUTH_LOGON_CHALLENGE_Server].
clogin CMD_AUTH_LOGON_PROOF_Client = 0x01 {
    u8[32] client_public_key;
    u8[20] client_proof;
    u8[20] crc_hash;
    u8 number_of_telemetry_keys;
    TelemetryKey[number_of_telemetry_keys] telemetry_keys;

    SecurityFlag security_flag;
    if (security_flag & PIN) {
        u8[16] pin_salt;
        u8[20] pin_hash;
    }
    if (security_flag & MATRIX_CARD) {
        /// Client proof of matrix input.
        /// Implementation details at `https://gist.github.com/barncastle/979c12a9c5e64d810a28ad1728e7e0f9`.
        u8[20] matrix_card_proof;
    }
} {
    login_versions = "5 6 7";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [0x04, 0x49, 0x57, 0xDD, 0x20, 0x51, 0x62, 0xF5, 0xFA, 0xFE, 0xB3, 0x67, 0x07, 0x72, 0x09, 0x51, 0x56, 0x20, 0x08, 0x08, 0x20, 0xC1, 0x26, 0xCA, 0xC8, 0xF7, 0x3B, 0x46, 0xFB, 0x88, 0x32, 0x06,];
    client_proof = [0x82, 0xC9, 0x97, 0x60, 0x42, 0xE4, 0x75, 0xF9, 0x7C, 0x60, 0x62, 0xE4, 0x54, 0x66, 0xA6, 0xFE, 0xDC, 0xE9, 0xAA, 0x7C,];
    crc_hash = [0xFE, 0x74, 0xDA, 0x70, 0x88, 0xCC, 0x76, 0x24, 0xC4, 0x28, 0x88, 0xB5, 0xEF, 0xC4, 0x1D, 0xB4, 0x6B, 0xC5, 0x2C, 0xFB,];
    number_of_telemetry_keys = 0;
    telemetry_keys = [];
    security_flag = PIN | MATRIX_CARD;
    pin_salt = [0xDD, 0x69, 0xF0, 0xF7, 0x58, 0x4C, 0x58, 0xF0, 0x86, 0x36, 0x3A, 0x1A, 0xBE, 0x6E, 0x1E, 0x4D,];
    pin_hash = [0x5A, 0x4E, 0xC0, 0x56, 0x58, 0x88, 0xE6, 0x29, 0x01, 0x6C, 0xBF, 0x3D, 0xF7, 0x8E, 0x82, 0x93, 0x6F, 0x1D, 0xBE, 0xE5,];
    matrix_card_proof = [0x69, 0x34, 0xCD, 0x08, 0x82, 0x94, 0xEF, 0x5D, 0x0F, 0x96, 0x9F, 0xFC, 0x17, 0x0B, 0xE4, 0x42, 0x08, 0x2E, 0xD1, 0x10,];
} [
    0x01, /* opcode */ 
    0x04, 0x49, 0x57, 0xDD, 0x20, 0x51, 0x62, 0xF5, 0xFA, 0xFE, 0xB3, 0x67, 0x07, 0x72, 0x09, 0x51, 0x56, 0x20, 0x08, 0x08, 0x20, 0xC1, 0x26, 0xCA, 0xC8, 0xF7, 0x3B, 0x46, 0xFB, 0x88, 0x32, 0x06, /* client_public_key */
    0x82, 0xC9, 0x97, 0x60, 0x42, 0xE4, 0x75, 0xF9, 0x7C, 0x60, 0x62, 0xE4, 0x54, 0x66, 0xA6, 0xFE, 0xDC, 0xE9, 0xAA, 0x7C, /* client_proof */
    0xFE, 0x74, 0xDA, 0x70, 0x88, 0xCC, 0x76, 0x24, 0xC4, 0x28, 0x88, 0xB5, 0xEF, 0xC4, 0x1D, 0xB4, 0x6B, 0xC5, 0x2C, 0xFB, /* crc_hash */
    0x00, /* number_of_telemetry_keys */
    0x03, /* security_flag */
    0xDD, 0x69, 0xF0, 0xF7, 0x58, 0x4C, 0x58, 0xF0, 0x86, 0x36, 0x3A, 0x1A, 0xBE, 0x6E, 0x1E, 0x4D, /* pin_salt */
    0x5A, 0x4E, 0xC0, 0x56, 0x58, 0x88, 0xE6, 0x29, 0x01, 0x6C, 0xBF, 0x3D, 0xF7, 0x8E, 0x82, 0x93, 0x6F, 0x1D, 0xBE, 0xE5, /* pin_hash */
    0x69, 0x34, 0xCD, 0x08, 0x82, 0x94, 0xEF, 0x5D, 0x0F, 0x96, 0x9F, 0xFC, 0x17, 0x0B, 0xE4, 0x42, 0x08, 0x2E, 0xD1, 0x10, /* matrix_card_proof */
] {
    login_versions = "5";
}

/// Reply after successful [CMD_AUTH_LOGON_CHALLENGE_Server].
clogin CMD_AUTH_LOGON_PROOF_Client = 0x01 {
    u8[32] client_public_key;
    u8[20] client_proof;
    u8[20] crc_hash;
    u8 number_of_telemetry_keys;
    TelemetryKey[number_of_telemetry_keys] telemetry_keys;

    SecurityFlag security_flag;
    if (security_flag & PIN) {
        u8[16] pin_salt;
        u8[20] pin_hash;
    }
    if (security_flag & MATRIX_CARD) {
        /// Client proof of matrix input.
        /// Implementation details at `https://gist.github.com/barncastle/979c12a9c5e64d810a28ad1728e7e0f9`.
        u8[20] matrix_card_proof;
    }
    if (security_flag & AUTHENTICATOR) {
        /// String entered by the user in the "Authenticator" popup.
        /// Can be empty and up to 16 characters.
        /// Is not used by the client in any way but just sent directly, so this could in theory be used for anything.
        String authenticator;
    }
} {
    login_versions = "8";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [
        {
            unknown1 = 0xFF;
            unknown2 = 0xDEADBEEF;
            unknown3 = [ 0x01, 0x02, 0x03, 0x04, ];
            cd_key_proof = [ 0x00, 0x01, 0x02, 0x03,
                         0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b,
                         0x0c, 0x0d, 0x0e, 0x0f,
                         0x10, 0x11, 0x12, 0x13, ];
        },
        {
            unknown1 = 0xFE;
            unknown2 = 0xDEADBEEE;
            unknown3 = [ 0x00, 0x01, 0x02, 0x03, ];
            cd_key_proof = [ 0x01, 0x02, 0x03, 0x04,
                         0x05, 0x06, 0x07, 0x08,
                         0x09, 0x0a, 0x0b, 0x0c,
                         0x0d, 0x0e, 0x0f, 0x10,
                         0x11, 0x12, 0x13, 0x14, ];
        },
    ];
    security_flag = NONE;
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x02, /* Num keys: 2 */
    0xFF, 0x00, /* TelemetryKey unknown1 */
    0xEF, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x01, 0x02, 0x03, 0x04, /* TelemetryKey unknown3 */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* TelemetryKey cd_key_proof */
    0xFE, 0x00, /* TelemetryKey unknown1 */
    0xEE, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x00, 0x01, 0x02, 0x03, /* TelemetryKey unknown3 */
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
    0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, /* TelemetryKey cd_key_proof */
    0x00, /* security_flag NONE */
] {
    login_versions = "8";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [
        {
            unknown1 = 0xFF;
            unknown2 = 0xDEADBEEF;
            unknown3 = [ 0x01, 0x02, 0x03, 0x04, ];
            cd_key_proof = [ 0x00, 0x01, 0x02, 0x03,
                         0x04, 0x05, 0x06, 0x07,
                         0x08, 0x09, 0x0a, 0x0b,
                         0x0c, 0x0d, 0x0e, 0x0f,
                         0x10, 0x11, 0x12, 0x13, ];
        },
    ];
    security_flag = NONE;
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x01, /* Num keys: 1 */
    0xFF, 0x00, /* TelemetryKey unknown1 */
    0xEF, 0xBE, 0xAD, 0xDE, /* TelemetryKey unknown2 */
    0x01, 0x02, 0x03, 0x04, /* TelemetryKey unknown3 */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
    0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* TelemetryKey cd_key_proof */
    0x00, /* security_flag NONE */
] {
    login_versions = "8";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [ ];
    security_flag = NONE;
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x00, /* Num keys: 0 */
    0x00, /* security_flag NONE */
] {
    login_versions = "8";
}

test CMD_AUTH_LOGON_PROOF_Client {
    client_public_key = [ 0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e,
                          0x3f, 0x5a, 0x5d, 0x8a, 0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7,
                          0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce, 0xd3, 0x1d,
                          0xd7, 0x08, ];
    client_proof = [ 0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
                     0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, ];
    crc_hash = [ 0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec, 0xc8, 0x41, 0xee, 0xb8,
                 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, ];
    telemetry_keys = [ ];
    security_flag = PIN;
    pin_salt = [ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
                 0x0e, 0x0f,];
    pin_hash = [ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
                 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13,];
} [
    0x01, /* Opcode: CMD_AUTH_LOGON_PROOF */
    0xf1, 0x3e, 0xe5, 0xd1, 0x83, 0xc4, 0xc8, 0xa9, 0x50, 0x0e, 0x3f, 0x5a, 0x5d, 0x8a,
    0xee, 0x4e, 0x2e, 0x45, 0xe1, 0xf7, 0xcc, 0x8f, 0x1c, 0xf5, 0xee, 0x8e, 0x11, 0xce,
    0xd3, 0x1d, 0xd7, 0x08, /* Client Public Key */
    0x6b, 0x1e, 0x48, 0x1b, 0x4d, 0x04, 0xa1, 0x18, 0xd8, 0xf2,
    0xde, 0x5c, 0x59, 0xd5, 0x5c, 0x81, 0x2e, 0x65, 0xec, 0x3e, /* Client Proof */
    0x4e, 0xf5, 0x2d, 0xe1, 0x80, 0x5e, 0x1a, 0x67, 0x15, 0xec,
    0xc8, 0x41, 0xee, 0xb8, 0x90, 0x8a, 0x58, 0xbb, 0x00, 0xd0, /* CRC Hash */
    0x00, /* Num keys: 0 */
    0x01, /* security_flag PIN */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
    0x0e, 0x0f, /* pin_salt */
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d,
    0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, /* pin_hash */
] {
    login_versions = "8";
}

